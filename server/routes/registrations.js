const express = require("express"); const { body, validationResult } = require("express-validator"); const Registration = require("../models/Registration"); const router = express.Router(); router.post("/", [ body("fullName").trim().notEmpty(), body("email").isEmail().normalizeEmail(), body("university").trim().notEmpty(), body("program").trim().notEmpty(), body("cyberBackground").trim().notEmpty() ], async (req, res) => { try { const errors = validationResult(req); if (!errors.isEmpty()) { return res.status(400).json({ errors: errors.array() }); } const { fullName, email, university, program, cyberBackground, friends } = req.body; const existingRegistration = await Registration.findOne({ email }); if (existingRegistration) { return res.status(400).json({ error: "Email already registered" }); } const registration = new Registration({ fullName, email, university, program, cyberBackground, friends, userId: req.user?.id || "anonymous" }); await registration.save(); res.status(201).json({ message: "Registration successful", registration }); } catch (error) { console.error("Registration error:", error); res.status(500).json({ error: "Server error" }); } }); router.get("/", async (req, res) => { try { const registrations = await Registration.find().sort({ timestamp: -1 }); res.json(registrations); } catch (error) { console.error("Error fetching registrations:", error); res.status(500).json({ error: "Server error" }); } }); module.exports = router;
